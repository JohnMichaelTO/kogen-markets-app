diff --git a/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js b/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js
index ac8b027..6d11e54 100644
--- a/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js
+++ b/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js
@@ -8,7 +8,7 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 import EventEmitter from "events";
-import { TransportRaceCondition, TransportError, StatusCodes, getAltStatusMessage, TransportStatusError, } from "@ledgerhq/errors";
+import { TransportError, StatusCodes, getAltStatusMessage, TransportStatusError, } from "@ledgerhq/errors";
 export { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage, };
 /**
  * The Transport class defines a generic interface for communicating with a Ledger hardware wallet.
@@ -48,7 +48,7 @@ export default class Transport {
         });
         this.exchangeAtomicImpl = (f) => __awaiter(this, void 0, void 0, function* () {
             if (this.exchangeBusyPromise) {
-                throw new TransportRaceCondition("An action was already pending on the Ledger device. Please deny or reconnect.");
+                throw new TransportError("An action was already pending on the Ledger device. Please deny or reconnect.");
             }
             let resolveBusy;
             const busyPromise = new Promise((r) => {
