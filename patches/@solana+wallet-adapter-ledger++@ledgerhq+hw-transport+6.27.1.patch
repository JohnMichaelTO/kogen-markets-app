diff --git a/node_modules/@solana/wallet-adapter-ledger/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js b/node_modules/@solana/wallet-adapter-ledger/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js
index 35b1fad..b16e20a 100644
--- a/node_modules/@solana/wallet-adapter-ledger/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js
+++ b/node_modules/@solana/wallet-adapter-ledger/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js
@@ -71,7 +71,7 @@ var __values = (this && this.__values) || function(o) {
     throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
 };
 import EventEmitter from "events";
-import { TransportRaceCondition, TransportError, StatusCodes, getAltStatusMessage, TransportStatusError, } from "@ledgerhq/errors";
+import {  TransportError, StatusCodes, getAltStatusMessage, TransportStatusError, } from "@ledgerhq/errors";
 export { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage, };
 /**
  * Transport defines the generic interface to share between node/u2f impl
@@ -129,7 +129,7 @@ var Transport = /** @class */ (function () {
                 switch (_a.label) {
                     case 0:
                         if (this.exchangeBusyPromise) {
-                            throw new TransportRaceCondition("An action was already pending on the Ledger device. Please deny or reconnect.");
+                            throw new TransportError("An action was already pending on the Ledger device. Please deny or reconnect.");
                         }
                         busyPromise = new Promise(function (r) {
                             resolveBusy = r;
